# Bayes++ top level Jamrules

# Set some important global variables if they haven't already been set by the
# user on the command-line or in the environment

# Establish the root of Bayes++
# $(gTOP) is the name of the variable containing the path from the invocation directory to the project root.
"BAYES++" = $($(gTOP)) ;

# BOOST_ROOT must be set to the root of the boost installation.
# Bayes++ targets will want $(BOOST) and $(BAYES++) in their #include path.
path-global "BAYES++" ;
path-global "BOOST_ROOT" ;
BOOST ?= $(BOOST_ROOT) ;


# Target output in Project Root
ALL_LOCATE_TARGET ?= target ;


# Build variant to allow testing with a local uBLAS version seperated from Boost
# Tested with compressed matrices
variant uBLAS_seperate_debug : debug : <include>"../../uBLAS" <define>BAYES_FILTER_COMPRESSED ;
variant uBLAS_seperate_release : release : <include>"../../uBLAS" <define>BAYES_FILTER_COMPRESSED ;

# Build variant to allow testing with a local boost_CVS version
variant boost_CVS_debug : debug : <include>"../../boost_CVS"  ;
variant boost_CVS_release : release : <include>"../../boost_CVS" ;

# Build variant for full compiler optimization
variant hardoptimize_release : release : 
    <gcc><*><cxxflags>"-fforce-mem -fomit-frame-pointer -foptimize-sibling-calls -finline-limit=2000"
      ;
