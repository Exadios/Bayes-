# Bayes++ Jamfile - See Boost.build v2

# Bayes++ Project root.
# The project root simply build all the subprojects:
#    BayesFilter library, and the examples.

build-project BayesFilter ;
build-project Simple ;
build-project PV ;
build-project QuadCalib ;

# Get Boost locaton from environment
BOOST = [ modules.peek : BOOST ] ;

# Project requirements
project
    : requirements <include>$(BOOST)
    : build-dir "target"
    ;

# Build variant to allow testing with a local uBLAS version seperated from Boost. It named @uBLAS so it sorted name is included first
# Tested with compressed matrices
variant uBLAS_seperate_debug : debug : <include>"../boost/@uBLAS" ;
variant uBLAS_seperate_release : release : <include>"../boost/@uBLAS" ;

# Tested with compressed matrices
variant compress_debug : debug : <define>BAYES_FILTER_COMPRESSED ;
variant compress_release : release : <define>BAYES_FILTER_COMPRESSED ;
variant uBLAS_seperate_compress_debug : uBLAS_seperate_debug : <define>BAYES_FILTER_COMPRESSED ;
variant uBLAS_seperate_compress_release : uBLAS_seperate_release : <define>BAYES_FILTER_COMPRESSED ;

# Build variant for full compiler optimization
variant hardoptimize_release : release : 
 	<toolset>gcc <cxxflags>"-ftemplate-depth-1000 -fforce-mem -fomit-frame-pointer -foptimize-sibling-calls -finline-limit=2000" ;

